{"version":3,"sources":["components/header-menu.js","components/sider-menu.js","const.js","services/brand-service.js","views/brand/brand-add.js","services/sneaker-service.js","views/brand/brand-list.js","views/sneaker/sneaker-add.js","views/sneaker/sneaker-list.js","services/province-service.js","views/order/order-add.js","views/order/order-list.js","views/socket/socket-test.js","views/home/Home.js","serviceWorker.js","index.js"],"names":["Header","HeaderMenu","className","theme","mode","defaultSelectedKeys","Item","key","SubMenu","Sider","SiderMenu","width","defaultOpenKeys","style","height","borderRight","title","YuqueFilled","CopyFilled","to","EditFilled","API_BASE","addNewBrand","data","a","axios","post","getBrandList","get","updateBrand","put","deleteBrand","modifiedBy","delete","ID","socket","SocketIO","BrandAdd","useForm","brandForm","useState","formLoading","setFormLoading","tailLayout","wrapperCol","offset","onFinish","values","postData","CREATED_BY","createdBy","TITLE","emit","isSuccess","notification","success","message","description","result","placement","resetFields","warning","error","tags","color","avatar","src","span","bordered","Grid","labelCol","form","name","initialValues","onFinishFailed","errorInfo","console","log","label","rules","required","placeholder","danger","loading","htmlType","onClick","type","getSneakerByBrandId","brandId","getSneakerList","updateSneaker","addNewSneaker","deleteSneaker","EditableCell","editing","dataIndex","inputType","children","record","index","restProps","inputNode","valuePropName","margin","BrandList","setData","editingKey","setEditingKey","setLoading","modalLoading","setModalLoading","modalVisible","setModalVisible","modalSneaker","setModalSneaker","modalData","setModalData","showModal","handleCancel","isEditing","cancel","getList","deleteData","useEffect","on","save","validateFields","row","putData","MODIFIED_BY","IS_DELETED","mergedColumns","editable","sorter","b","align","render","_","moment","Date","CREATED_DATE","format","MODIFIED_DATE","checked","Math","random","marginRight","shape","icon","SaveOutlined","onConfirm","MinusCircleOutlined","size","SearchOutlined","disabled","setFieldsValue","edit","DeleteOutlined","PlusOutlined","map","col","onCell","value","length","component","components","body","cell","rowKey","fixedHeader","tableLayout","dataSource","columns","rowClassName","pagination","onChange","visible","onOk","setTimeout","onCancel","footer","itemLayout","renderItem","item","Meta","Option","SneakerAdd","sneakerForm","brandList","setBrandList","getBrand","COLOR","BRAND_ID","brand","allowClear","brandListData","SneakerList","setBrandListData","selectedBrand","filter","getProvinceList","OrderAdd","provinceListData","setProvinceListData","districtListData","setDistrictListData","provinceList","getFieldsValue","showSearch","UPPER_CITY_NAME","DISTRICTS","labelInValue","UPPER_DISTRICT_NAME","OrderList","SocketTest","user","text","Content","Home","padding","minHeight","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8d0fb9e3.chunk.js","sourcesContent":["import React from 'react'\nimport { Layout, Menu } from 'antd'\n\nconst { Header } = Layout\n\nconst HeaderMenu = () => (\n  <Header className=\"header\">\n    <div className=\"logo\" />\n    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n      <Menu.Item key=\"1\">PAPUÇ KONAĞI</Menu.Item>\n    </Menu>\n  </Header>\n)\n\nexport default HeaderMenu\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Layout, Menu } from 'antd'\nimport { CopyFilled, YuqueFilled, EditFilled } from '@ant-design/icons'\n\nconst { SubMenu } = Menu\nconst { Sider } = Layout\n\nconst SiderMenu = () => (\n  <Sider width={400} className=\"site-layout-background\">\n    <Menu\n      theme=\"dark\"\n      mode=\"inline\"\n      defaultOpenKeys={['sub1']}\n      style={{ height: '100%', borderRight: 0 }}\n    >\n      <SubMenu\n        key=\"sub1\"\n        title={\n          <span>\n            <YuqueFilled />\n            Brand\n          </span>\n        }\n      >\n        <Menu.Item key=\"1\">\n          <CopyFilled />\n          <span>List</span>\n          <Link to=\"/brand-list\" />\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <EditFilled />\n          <span>Add New</span>\n          <Link to=\"/brand-add\" />\n        </Menu.Item>\n      </SubMenu>\n      <SubMenu\n        key=\"sub2\"\n        title={\n          <span>\n            <YuqueFilled />\n            Sneaker\n          </span>\n        }\n      >\n        <Menu.Item key=\"3\">\n          <CopyFilled />\n          <span>List</span>\n          <Link to=\"/sneaker-list\" />\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          <EditFilled />\n          <span>Add New</span>\n          <Link to=\"/sneaker-add\" />\n        </Menu.Item>\n      </SubMenu>{' '}\n      <SubMenu\n        key=\"sub3\"\n        title={\n          <span>\n            <YuqueFilled />\n            Order\n          </span>\n        }\n      >\n        <Menu.Item key=\"5\">\n          <CopyFilled />\n          <span>List</span>\n          <Link to=\"/order-list\" />\n        </Menu.Item>\n        <Menu.Item key=\"6\">\n          <EditFilled />\n          <span>Add New</span>\n          <Link to=\"/order-add\" />\n        </Menu.Item>\n      </SubMenu>\n      <SubMenu\n        key=\"sub4\"\n        title={\n          <span>\n            <YuqueFilled />\n            Socket\n          </span>\n        }\n      >\n        <Menu.Item key=\"7\">\n          <EditFilled />\n          <span>Socket Test</span>\n          <Link to=\"/socket-test\" />\n        </Menu.Item>\n      </SubMenu>\n    </Menu>\n  </Sider>\n)\n\nexport default SiderMenu\n","export const API_BASE = 'https://api-papuckonagi.herokuapp.com'\n","import { API_BASE } from '../const'\n\nimport axios from 'axios'\n\nexport const addNewBrand = async (data) => {\n  return await axios.post(`${API_BASE}/brand`, data)\n}\n\nexport const getBrandList = async () => {\n  return await axios.get(`${API_BASE}/brand`)\n}\n\nexport const updateBrand = async (data) => {\n  return await axios.put(`${API_BASE}/brand`, data)\n}\n\nexport const deleteBrand = async (data, modifiedBy) => {\n  return await axios.delete(`${API_BASE}/brand/${data.ID}/${modifiedBy}`)\n}\n","import React, { useState } from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  PageHeader,\n  Tag,\n  Row,\n  Col,\n  Card,\n  notification\n} from 'antd'\n\nimport { addNewBrand } from './../../services/brand-service'\nimport { API_BASE } from '../../const'\n\nimport SocketIO from 'socket.io-client'\n\nlet socket = SocketIO(API_BASE)\n\nconst BrandAdd = () => {\n  const [brandForm] = Form.useForm()\n  const [formLoading, setFormLoading] = useState(false)\n\n  const layout = {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 12\n    }\n  }\n  const tailLayout = {\n    wrapperCol: {\n      offset: 12\n    }\n  }\n\n  const gridStyle = {\n    width: '100%'\n  }\n  const onFinish = async (values) => {\n    setFormLoading(true)\n\n    const postData = {\n      CREATED_BY: values.createdBy,\n      TITLE: values.title\n    }\n\n    const { data } = await addNewBrand(postData)\n\n    socket.emit('addNewBrand', data.isSuccess)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: `${data.result.TITLE} added successfully!`,\n        placement: 'topLeft'\n      })\n      brandForm.resetFields()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setFormLoading(false)\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title=\"BRAND\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">New</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      ></PageHeader>\n      <Row>\n        <Col span={16}>\n          <Card title=\"Add New Brand\" bordered={false}>\n            <Card.Grid style={gridStyle}>\n              <Form\n                {...layout}\n                form={brandForm}\n                name=\"brandForm\"\n                onFinish={onFinish}\n                initialValues={{\n                  createdBy: 'ncmttnynk'\n                }}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"Title\"\n                  name=\"title\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input brand title!'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"NIKE\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"Created By\"\n                  name=\"createdBy\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input created by!'\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button\n                    danger\n                    loading={formLoading}\n                    htmlType=\"button\"\n                    onClick={() => brandForm.resetFields()}\n                  >\n                    Reset\n                  </Button>{' '}\n                  <Button\n                    loading={formLoading}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Card.Grid>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default BrandAdd\n","import { API_BASE } from '../const'\n\nimport axios from 'axios'\n\nexport const getSneakerByBrandId = async (brandId) => {\n  return await axios.get(`${API_BASE}/sneaker/brand/${brandId}`)\n}\n\nexport const getSneakerList = async () => {\n  return await axios.get(`${API_BASE}/sneaker`)\n}\n\nexport const updateSneaker = async (data) => {\n  return await axios.put(`${API_BASE}/sneaker`, data)\n}\n\nexport const addNewSneaker = async (data) => {\n  return await axios.post(`${API_BASE}/sneaker`, data)\n}\n\nexport const deleteSneaker = async (data, modifiedBy) => {\n  return await axios.delete(`${API_BASE}/sneaker/${data.ID}/${modifiedBy}`)\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Table,\n  Input,\n  Popconfirm,\n  Form,\n  Button,\n  Tooltip,\n  Space,\n  Checkbox,\n  PageHeader,\n  Tag,\n  Row,\n  Col,\n  Card,\n  Modal,\n  Statistic,\n  List,\n  notification\n} from 'antd'\nimport {\n  SearchOutlined,\n  MinusCircleOutlined,\n  SaveOutlined,\n  DeleteOutlined,\n  PlusOutlined\n} from '@ant-design/icons'\n\nimport {\n  getBrandList,\n  updateBrand,\n  deleteBrand\n} from './../../services/brand-service'\nimport { getSneakerByBrandId } from './../../services/sneaker-service'\n\nimport * as moment from 'moment'\n\nimport { API_BASE } from '../../const'\n\nimport SocketIO from 'socket.io-client'\n\nlet socket = SocketIO(API_BASE)\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  var inputNode = ''\n  switch (inputType) {\n    case 'checkbox':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          valuePropName=\"checked\"\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Checkbox />\n        </Form.Item>\n      )\n      break\n    case 'input':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      )\n      break\n    default:\n      break\n  }\n  return <td {...restProps}>{editing ? inputNode : children}</td>\n}\n\nconst BrandList = () => {\n  const [form] = Form.useForm()\n  const [data, setData] = useState([])\n  const [editingKey, setEditingKey] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [modalLoading, setModalLoading] = useState(false)\n  const [modalVisible, setModalVisible] = useState(false)\n  const [modalSneaker, setModalSneaker] = useState({})\n  const [modalData, setModalData] = useState([])\n\n  const gridStyle = {\n    width: '100%'\n  }\n\n  const showModal = async (key) => {\n    const { data } = await getSneakerByBrandId(key.ID)\n    setModalData(data.result)\n    setModalSneaker(key)\n    setModalVisible(true)\n    setLoading(true)\n  }\n\n  const handleOk = () => {\n    setModalLoading(true)\n    setTimeout(() => {\n      setModalLoading(false)\n      setModalVisible(false)\n    }, 3000)\n  }\n\n  const handleCancel = () => {\n    setModalVisible(false)\n    setLoading(false)\n  }\n\n  const isEditing = (record) => record.ID === editingKey\n\n  const edit = (record) => {\n    form.setFieldsValue({ ...record })\n    setEditingKey(record.ID)\n  }\n\n  const cancel = () => {\n    setEditingKey('')\n  }\n\n  const getList = async () => {\n    setLoading(true)\n    const { data } = await getBrandList()\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: 'Sneaker list get successfully!',\n        placement: 'topLeft'\n      })\n      setData(data.result)\n      setLoading(false)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  const deleteData = async (key) => {\n    setLoading(true)\n    const { data } = await deleteBrand(key, 'ncmttnynk')\n    socket.emit('deleteBrand', data.isSuccess)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: 'Brand deleted succesfully!',\n        placement: 'topLeft'\n      })\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    socket.on('getBrand', (message) => {\n      if (message) {\n        getList()\n      }\n    })\n    getList()\n  }, [])\n\n  const save = async (key) => {\n    setLoading(true)\n\n    const row = await form.validateFields()\n\n    const putData = {\n      ID: key,\n      TITLE: row.TITLE,\n      MODIFIED_BY: row.MODIFIED_BY,\n      IS_DELETED: row.IS_DELETED\n    }\n    const { data } = await updateBrand(putData)\n    socket.emit('updateBrand', data.isSuccess)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: `${row.TITLE} updated successfully!`,\n        placement: 'topLeft'\n      })\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setLoading(false)\n    setEditingKey('')\n  }\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'ID',\n      editable: false,\n      key: 'ID',\n      sorter: (a, b) => a.ID - b.ID,\n      align: 'center',\n      width: '5%'\n    },\n    {\n      title: 'TITLE',\n      dataIndex: 'TITLE',\n      editable: true,\n      key: 'TITLE',\n      align: 'center'\n    },\n    {\n      title: 'CREATED BY',\n      dataIndex: 'CREATED_BY',\n      editable: false,\n      key: 'CREATED_BY',\n      align: 'center'\n    },\n    {\n      title: 'CREATED DATE',\n      dataIndex: 'CREATED_DATE',\n      render: (_, record) => {\n        return (\n          <span>\n            {moment(new Date(record.CREATED_DATE)).format('DD.MM.YYYY')}\n          </span>\n        )\n      },\n      key: 'CREATED_DATE',\n      align: 'center'\n    },\n    {\n      title: 'MODIFIED BY',\n      dataIndex: 'MODIFIED_BY',\n      editable: true,\n      key: 'MODIFIED_BY',\n      align: 'center'\n    },\n    {\n      title: 'MODIFIED DATE',\n      dataIndex: 'MODIFIED_DATE',\n      render: (_, record) => {\n        return (\n          <span>\n            {record.MODIFIED_DATE\n              ? moment(new Date(record.MODIFIED_DATE)).format('DD.MM.YYYY')\n              : ''}\n          </span>\n        )\n      },\n      key: 'MODIFIED_DATE',\n      align: 'center'\n    },\n    {\n      title: 'IS DELETED',\n      dataIndex: 'IS_DELETED',\n      editable: true,\n      render: (_, record) => {\n        return <Checkbox checked={record.IS_DELETED ? true : false} />\n      },\n      key: 'IS_DELETED',\n      align: 'center'\n    },\n    {\n      title: 'ACTION',\n      dataIndex: 'operation',\n      key: 'ACTION',\n      render: (_, record) => {\n        const editable = isEditing(record)\n        return editable ? (\n          <div key={Math.random()}>\n            <Tooltip title=\"Save\">\n              <Button\n                onClick={() => save(record.ID)}\n                style={{\n                  marginRight: 8\n                }}\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                icon={<SaveOutlined />}\n              />\n            </Tooltip>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <Tooltip title=\"Cancel\">\n                <Button\n                  key={Math.random()}\n                  type=\"primary\"\n                  shape=\"circle\"\n                  icon={<MinusCircleOutlined />}\n                />\n              </Tooltip>\n            </Popconfirm>\n          </div>\n        ) : (\n          <Space size=\"middle\">\n            <Tooltip title=\"Edit\">\n              <Button\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                icon={<SearchOutlined />}\n                disabled={editingKey !== ''}\n                onClick={() => edit(record)}\n              />\n            </Tooltip>\n            <Popconfirm\n              title=\"Sure to delete?\"\n              disabled={record.IS_DELETED}\n              onConfirm={() => deleteData(record)}\n            >\n              <Tooltip title=\"Delete\">\n                <Button\n                  key={Math.random()}\n                  type=\"primary\"\n                  shape=\"circle\"\n                  disabled={editingKey !== '' || record.IS_DELETED}\n                  icon={<DeleteOutlined />}\n                />\n              </Tooltip>\n            </Popconfirm>\n            <Tooltip title=\"Show Brand`s Sneakers\">\n              <Button\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                disabled={editingKey !== '' || record.IS_DELETED}\n                icon={<PlusOutlined />}\n                onClick={() => showModal(record)}\n              />\n            </Tooltip>\n          </Space>\n        )\n      },\n      align: 'center'\n    }\n  ]\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === 'IS_DELETED' ? 'checkbox' : 'input',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    }\n  })\n  return (\n    <div>\n      <PageHeader\n        title=\"BRAND\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">List</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      >\n        <Row>\n          <Statistic title=\"TOTAL\" value={data.length} />\n        </Row>\n      </PageHeader>\n      <Row>\n        <Col span={24}>\n          <Card title=\"Add New Brand\" bordered={false}>\n            <Card.Grid style={gridStyle}>\n              <Form form={form} component={false}>\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell\n                    }\n                  }}\n                  rowKey=\"ID\"\n                  fixedHeader={false}\n                  tableLayout=\"fixed\"\n                  dataSource={data}\n                  loading={loading}\n                  columns={mergedColumns}\n                  rowClassName=\"editable-row\"\n                  pagination={{\n                    onChange: cancel\n                  }}\n                  size=\"small\"\n                />\n              </Form>\n            </Card.Grid>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        visible={modalVisible}\n        title={modalSneaker.TITLE}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            loading={modalLoading}\n            onClick={() => handleCancel()}\n          >\n            Close\n          </Button>\n        ]}\n      >\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={modalData}\n          renderItem={(item) => (\n            <List.Item>\n              <List.Item.Meta title={<Tag color=\"black\">{item.TITLE}</Tag>} />\n            </List.Item>\n          )}\n        />\n      </Modal>\n    </div>\n  )\n}\n\nexport default BrandList\n","import React, { useState, useEffect } from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  PageHeader,\n  Tag,\n  Row,\n  Col,\n  Card,\n  notification,\n  Select\n} from 'antd'\n\nimport { getBrandList } from './../../services/brand-service'\nimport { addNewSneaker } from './../../services/sneaker-service'\n\nconst { Option } = Select\n\nconst SneakerAdd = () => {\n  const [sneakerForm] = Form.useForm()\n  const [brandList, setBrandList] = useState([])\n  const [formLoading, setFormLoading] = useState(false)\n\n  const layout = {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 12\n    }\n  }\n  const tailLayout = {\n    wrapperCol: {\n      offset: 12\n    }\n  }\n\n  const gridStyle = {\n    width: '100%'\n  }\n\n  const getBrand = async () => {\n    const { data } = await getBrandList()\n    if (data.isSuccess) {\n      setBrandList(data.result)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getBrand()\n  }, [])\n\n  const onFinish = async (values) => {\n    setFormLoading(true)\n    const postData = {\n      CREATED_BY: values.createdBy,\n      TITLE: values.title,\n      COLOR: values.color,\n      BRAND_ID: values.brand\n    }\n    const { data } = await addNewSneaker(postData)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: `${data.result.TITLE} added successfully!`,\n        placement: 'topLeft'\n      })\n      sneakerForm.resetFields()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setFormLoading(false)\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    notification.warning({\n      message: 'Error',\n      description: 'Validate form!',\n      placement: 'topLeft'\n    })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title=\"SNEAKER\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">New</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      ></PageHeader>\n      <Row>\n        <Col span={16}>\n          <Card title=\"Add New Sneaker\" bordered={false}>\n            <Card.Grid style={gridStyle}>\n              <Form\n                {...layout}\n                form={sneakerForm}\n                name=\"sneakerForm\"\n                onFinish={onFinish}\n                initialValues={{\n                  createdBy: 'ncmttnynk'\n                }}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"Title\"\n                  name=\"title\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input brand title!'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"AIRMAX\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"Color\"\n                  name=\"color\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input sneaker color!'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Black and White\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"brand\"\n                  label=\"Brand\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input brand!'\n                    }\n                  ]}\n                >\n                  <Select placeholder=\"Select a brand\" allowClear>\n                    {brandList.map((item) => {\n                      return (\n                        <Option key={item.ID} value={item.ID}>\n                          {item.TITLE}\n                        </Option>\n                      )\n                    })}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  label=\"Created By\"\n                  name=\"createdBy\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input created by!'\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button\n                    danger\n                    loading={formLoading}\n                    htmlType=\"button\"\n                    onClick={() => sneakerForm.resetFields()}\n                  >\n                    Reset\n                  </Button>{' '}\n                  <Button\n                    loading={formLoading}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Card.Grid>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default SneakerAdd\n","import React, { useState, useEffect } from 'react'\nimport {\n  Table,\n  Input,\n  Popconfirm,\n  Form,\n  Button,\n  Tooltip,\n  Space,\n  Checkbox,\n  PageHeader,\n  Tag,\n  Row,\n  Col,\n  notification,\n  Card,\n  Statistic,\n  Select\n} from 'antd'\nimport {\n  SearchOutlined,\n  MinusCircleOutlined,\n  SaveOutlined,\n  DeleteOutlined\n} from '@ant-design/icons'\n\nimport { getBrandList } from './../../services/brand-service'\nimport {\n  deleteSneaker,\n  updateSneaker,\n  getSneakerList\n} from './../../services/sneaker-service'\n\nimport * as moment from 'moment'\n\nconst { Option } = Select\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  brandListData,\n  ...restProps\n}) => {\n  var inputNode = ''\n  switch (inputType) {\n    case 'checkbox':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          valuePropName=\"checked\"\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Checkbox />\n        </Form.Item>\n      )\n      break\n    case 'input':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      )\n      break\n    case 'select':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Select placeholder=\"Select a brand\" allowClear>\n            {brandListData.map((item) => {\n              return (\n                <Option key={item.ID} value={item.ID}>\n                  {item.TITLE}\n                </Option>\n              )\n            })}\n          </Select>\n        </Form.Item>\n      )\n      break\n    default:\n      break\n  }\n  return <td {...restProps}>{editing ? inputNode : children}</td>\n}\n\nconst SneakerList = () => {\n  const [form] = Form.useForm()\n  const [data, setData] = useState([])\n  const [brandListData, setBrandListData] = useState([])\n  const [editingKey, setEditingKey] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const gridStyle = {\n    width: '100%'\n  }\n\n  const isEditing = (record) => record.ID === editingKey\n\n  const edit = (record) => {\n    form.setFieldsValue({ ...record })\n    setEditingKey(record.ID)\n  }\n\n  const cancel = () => {\n    setEditingKey('')\n  }\n\n  const getList = async () => {\n    setLoading(true)\n    const { data } = await getSneakerList()\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: 'Sneaker list get successfully!',\n        placement: 'topLeft'\n      })\n      setData(data.result)\n      setLoading(false)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  const getBrand = async () => {\n    const { data } = await getBrandList()\n    if (data.isSuccess) {\n      setBrandListData(data.result)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getList()\n    getBrand()\n  }, [])\n\n  const deleteData = async (key) => {\n    setLoading(true)\n    const { data } = await deleteSneaker(key, 'ncmttnynk')\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: 'Sneaker deleted succesfully!',\n        placement: 'topLeft'\n      })\n      getList()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setLoading(false)\n  }\n\n  const save = async (key) => {\n    setLoading(true)\n    const row = await form.validateFields()\n\n    const selectedBrand = brandListData.filter(\n      (item) =>\n        item.TITLE === row['BRAND.TITLE'] || item.ID === row['BRAND.TITLE']\n    )[0]\n\n    const putData = {\n      ID: key.ID,\n      TITLE: row.TITLE,\n      COLOR: row.COLOR,\n      BRAND_ID: selectedBrand.ID,\n      MODIFIED_BY: row.MODIFIED_BY,\n      IS_DELETED: row.IS_DELETED\n    }\n    const { data } = await updateSneaker(putData)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: `${row.TITLE} updated successfully!`,\n        placement: 'topLeft'\n      })\n      getList()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setLoading(false)\n    setEditingKey('')\n  }\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'ID',\n      editable: false,\n      key: 'ID',\n      sorter: (a, b) => a.ID - b.ID,\n      width: '5%',\n      align: 'center'\n    },\n    {\n      title: 'TITLE',\n      dataIndex: 'TITLE',\n      editable: true,\n      key: 'TITLE',\n      align: 'center'\n    },\n    {\n      title: 'COLOR',\n      dataIndex: 'COLOR',\n      editable: true,\n      key: 'COLOR',\n      align: 'center'\n    },\n    {\n      title: 'BRAND',\n      dataIndex: 'BRAND.TITLE',\n      editable: true,\n      key: 'BRAND',\n      align: 'center'\n    },\n    {\n      title: 'CREATED BY',\n      dataIndex: 'CREATED_BY',\n      editable: false,\n      key: 'CREATED_BY',\n      align: 'center'\n    },\n    {\n      title: 'CREATED DATE',\n      dataIndex: 'CREATED_DATE',\n      render: (_, record) => {\n        return (\n          <Tag color=\"blue\">\n            {moment(new Date(record.CREATED_DATE)).format('DD.MM.YYYY')}\n          </Tag>\n        )\n      },\n      key: 'CREATED_DATE',\n      align: 'center'\n    },\n    {\n      title: 'MODIFIED BY',\n      dataIndex: 'MODIFIED_BY',\n      editable: true,\n      key: 'MODIFIED_BY',\n      align: 'center'\n    },\n    {\n      title: 'MODIFIED DATE',\n      dataIndex: 'MODIFIED_DATE',\n      render: (_, record) => {\n        return (\n          <span>\n            {record.MODIFIED_DATE\n              ? moment(new Date(record.MODIFIED_DATE)).format('DD.MM.YYYY')\n              : ''}\n          </span>\n        )\n      },\n      key: 'MODIFIED_DATE',\n      align: 'center'\n    },\n    {\n      title: 'IS DELETED',\n      dataIndex: 'IS_DELETED',\n      editable: true,\n      render: (_, record) => {\n        return <Checkbox checked={record.IS_DELETED} />\n      },\n      key: 'IS_DELETED',\n      align: 'center'\n    },\n    {\n      title: 'ACTION',\n      dataIndex: 'operation',\n      key: 'ACTION',\n      render: (_, record) => {\n        const editable = isEditing(record)\n        return editable ? (\n          <div key={Math.random()}>\n            <Tooltip title=\"Save\">\n              <Button\n                onClick={() => save(record)}\n                style={{\n                  marginRight: 8\n                }}\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                icon={<SaveOutlined />}\n              />\n            </Tooltip>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <Tooltip title=\"Cancel\">\n                <Button\n                  key={Math.random()}\n                  type=\"primary\"\n                  shape=\"circle\"\n                  icon={<MinusCircleOutlined />}\n                />\n              </Tooltip>\n            </Popconfirm>\n          </div>\n        ) : (\n          <Space size=\"middle\">\n            <Tooltip title=\"Edit\">\n              <Button\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                icon={<SearchOutlined />}\n                disabled={editingKey !== ''}\n                onClick={() => edit(record)}\n              />\n            </Tooltip>\n            <Popconfirm\n              title=\"Sure to delete?\"\n              disabled={record.IS_DELETED}\n              onConfirm={() => deleteData(record)}\n            >\n              <Tooltip title=\"Delete\">\n                <Button\n                  key={Math.random()}\n                  type=\"primary\"\n                  shape=\"circle\"\n                  disabled={editingKey !== '' || record.IS_DELETED}\n                  icon={<DeleteOutlined />}\n                />\n              </Tooltip>\n            </Popconfirm>\n          </Space>\n        )\n      },\n      align: 'center'\n    }\n  ]\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType:\n          col.dataIndex === 'IS_DELETED'\n            ? 'checkbox'\n            : col.dataIndex === 'BRAND.TITLE'\n            ? 'select'\n            : 'input',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n        brandListData: brandListData\n      })\n    }\n  })\n  return (\n    <div>\n      <PageHeader\n        title=\"SNEAKER\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">List</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      >\n        <Row>\n          <Statistic title=\"TOTAL\" value={data.length} />\n        </Row>\n      </PageHeader>\n      <Row>\n        <Col span={24}>\n          <Card title=\"Sneaker List\" bordered={false}>\n            <Card.Grid style={gridStyle}>\n              <Form form={form} component={false}>\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell\n                    }\n                  }}\n                  rowKey=\"ID\"\n                  fixedHeader={false}\n                  tableLayout=\"fixed\"\n                  dataSource={data}\n                  loading={loading}\n                  columns={mergedColumns}\n                  rowClassName=\"editable-row\"\n                  pagination={{\n                    onChange: cancel\n                  }}\n                  size=\"small\"\n                />\n              </Form>\n            </Card.Grid>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default SneakerList\n","import { API_BASE } from '../const'\n\nimport axios from 'axios'\n\nexport const getProvinceList = async () => {\n  return await axios.get(`${API_BASE}/province`)\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  PageHeader,\n  Tag,\n  Row,\n  Col,\n  Card,\n  notification,\n  Select\n} from 'antd'\n\nimport { getBrandList } from './../../services/brand-service'\nimport { addNewSneaker } from './../../services/sneaker-service'\nimport { getProvinceList } from './../../services/province-service'\n\nconst { Option } = Select\n\nconst OrderAdd = () => {\n  const [sneakerForm] = Form.useForm()\n  const [brandList, setBrandList] = useState([])\n  const [provinceListData, setProvinceListData] = useState([])\n  const [districtListData, setDistrictListData] = useState([])\n  const [formLoading, setFormLoading] = useState(false)\n\n  const layout = {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 12\n    }\n  }\n  const tailLayout = {\n    wrapperCol: {\n      offset: 12\n    }\n  }\n\n  const gridStyle = {\n    width: '100%'\n  }\n\n  const provinceList = async () => {\n    setFormLoading(true)\n    const { data } = await getProvinceList()\n    if (data.isSuccess) {\n      setProvinceListData(data.result)\n    } else {\n    }\n    setFormLoading(false)\n  }\n\n  const getBrand = async () => {\n    const { data } = await getBrandList()\n    if (data.isSuccess) {\n      setBrandList(data.result)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getBrand()\n    provinceList()\n  }, [])\n\n  const handleChange = (value) => {\n    if (value) {\n      const data = provinceListData.filter(\n        (item) => item.UPPER_CITY_NAME === value.key\n      )[0].DISTRICTS\n      setDistrictListData(data)\n    }\n  }\n\n  const onFinish = async (values) => {\n    console.log(sneakerForm.getFieldsValue())\n    setFormLoading(true)\n    const postData = {\n      CREATED_BY: values.createdBy,\n      TITLE: values.title,\n      COLOR: values.color,\n      BRAND_ID: values.brand\n    }\n    const { data } = await addNewSneaker(postData)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: `${data.result.TITLE} added successfully!`,\n        placement: 'topLeft'\n      })\n      sneakerForm.resetFields()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setFormLoading(false)\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    notification.warning({\n      message: 'Error',\n      description: 'Validate form!',\n      placement: 'topLeft'\n    })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title=\"SNEAKER\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">New</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      ></PageHeader>\n      <Row>\n        <Col span={16}>\n          <Card title=\"Add New Sneaker\" bordered={false}>\n            <Card.Grid style={gridStyle}>\n              <Form\n                {...layout}\n                form={sneakerForm}\n                name=\"sneakerForm\"\n                onFinish={onFinish}\n                initialValues={{\n                  createdBy: 'ncmttnynk'\n                }}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"Name\"\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input customer name!'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Smith\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"Surname\"\n                  name=\"surName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input customer surname!'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Smith\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"Phone\"\n                  name=\"phone\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input customer phone!'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"+905555555555\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"Province\"\n                  name=\"province\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input province!'\n                    }\n                  ]}\n                >\n                  <Select\n                    showSearch\n                    onChange={handleChange}\n                    placeholder=\"Select a province\"\n                    allowClear\n                    labelInValue={true}\n                  >\n                    {provinceListData.map((item) => {\n                      return (\n                        <Option key={item.ID} value={item.UPPER_CITY_NAME}>\n                          {item.UPPER_CITY_NAME}\n                        </Option>\n                      )\n                    })}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  label=\"District\"\n                  name=\"district\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input district!'\n                    }\n                  ]}\n                >\n                  <Select placeholder=\"Select a district\" allowClear showSearch>\n                    {districtListData.map((item) => {\n                      return (\n                        <Option key={item.ID} value={item.ID}>\n                          {item.UPPER_DISTRICT_NAME}\n                        </Option>\n                      )\n                    })}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"brand\"\n                  label=\"Brand\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input brand!'\n                    }\n                  ]}\n                >\n                  <Select placeholder=\"Select a brand\" allowClear>\n                    {brandList.map((item) => {\n                      return (\n                        <Option key={item.ID} value={item.ID}>\n                          {item.TITLE}\n                        </Option>\n                      )\n                    })}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  label=\"Created By\"\n                  name=\"createdBy\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input created by!'\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button\n                    danger\n                    loading={formLoading}\n                    htmlType=\"button\"\n                    onClick={() => sneakerForm.resetFields()}\n                  >\n                    Reset\n                  </Button>{' '}\n                  <Button\n                    loading={formLoading}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Card.Grid>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default OrderAdd\n","import React, { useState, useEffect } from 'react'\nimport {\n  Table,\n  Input,\n  Popconfirm,\n  Form,\n  Button,\n  Tooltip,\n  Space,\n  Checkbox,\n  PageHeader,\n  Tag,\n  Row,\n  Col,\n  notification,\n  Card,\n  Statistic,\n  Select\n} from 'antd'\nimport {\n  SearchOutlined,\n  MinusCircleOutlined,\n  SaveOutlined,\n  DeleteOutlined\n} from '@ant-design/icons'\n\nimport { getBrandList } from './../../services/brand-service'\nimport {\n  deleteSneaker,\n  updateSneaker,\n  getSneakerList\n} from './../../services/sneaker-service'\n\nimport * as moment from 'moment'\n\nconst { Option } = Select\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  brandListData,\n  ...restProps\n}) => {\n  var inputNode = ''\n  switch (inputType) {\n    case 'checkbox':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          valuePropName=\"checked\"\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Checkbox />\n        </Form.Item>\n      )\n      break\n    case 'input':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      )\n      break\n    case 'select':\n      inputNode = (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          <Select placeholder=\"Select a brand\" allowClear>\n            {brandListData.map((item) => {\n              return (\n                <Option key={item.ID} value={item.ID}>\n                  {item.TITLE}\n                </Option>\n              )\n            })}\n          </Select>\n        </Form.Item>\n      )\n      break\n    default:\n      break\n  }\n  return <td {...restProps}>{editing ? inputNode : children}</td>\n}\n\nconst OrderList = () => {\n  const [form] = Form.useForm()\n  const [data, setData] = useState([])\n  const [brandListData, setBrandListData] = useState([])\n  const [editingKey, setEditingKey] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const gridStyle = {\n    width: '100%'\n  }\n\n  const isEditing = (record) => record.ID === editingKey\n\n  const edit = (record) => {\n    form.setFieldsValue({ ...record })\n    setEditingKey(record.ID)\n  }\n\n  const cancel = () => {\n    setEditingKey('')\n  }\n\n  const getList = async () => {\n    setLoading(true)\n    const { data } = await getSneakerList()\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: 'Sneaker list get successfully!',\n        placement: 'topLeft'\n      })\n      setData(data.result)\n      setLoading(false)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  const getBrand = async () => {\n    const { data } = await getBrandList()\n    if (data.isSuccess) {\n      setBrandListData(data.result)\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getList()\n    getBrand()\n  }, [])\n\n  const deleteData = async (key) => {\n    setLoading(true)\n    const { data } = await deleteSneaker(key, 'ncmttnynk')\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: 'Sneaker deleted succesfully!',\n        placement: 'topLeft'\n      })\n      getList()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setLoading(false)\n  }\n\n  const save = async (key) => {\n    setLoading(true)\n    const row = await form.validateFields()\n\n    const selectedBrand = brandListData.filter(\n      (item) =>\n        item.TITLE === row['BRAND.TITLE'] || item.ID === row['BRAND.TITLE']\n    )[0]\n\n    const putData = {\n      ID: key.ID,\n      TITLE: row.TITLE,\n      COLOR: row.COLOR,\n      BRAND_ID: selectedBrand.ID,\n      MODIFIED_BY: row.MODIFIED_BY,\n      IS_DELETED: row.IS_DELETED\n    }\n    const { data } = await updateSneaker(putData)\n    if (data.isSuccess) {\n      notification.success({\n        message: 'Success',\n        description: `${row.TITLE} updated successfully!`,\n        placement: 'topLeft'\n      })\n      getList()\n    } else {\n      notification.warning({\n        message: 'Error',\n        description: `${data.error}!`,\n        placement: 'topLeft'\n      })\n    }\n    setLoading(false)\n    setEditingKey('')\n  }\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'ID',\n      editable: false,\n      key: 'ID',\n      sorter: (a, b) => a.ID - b.ID,\n      width: '5%',\n      align: 'center'\n    },\n    {\n      title: 'TITLE',\n      dataIndex: 'TITLE',\n      editable: true,\n      key: 'TITLE',\n      align: 'center'\n    },\n    {\n      title: 'COLOR',\n      dataIndex: 'COLOR',\n      editable: true,\n      key: 'COLOR',\n      align: 'center'\n    },\n    {\n      title: 'BRAND',\n      dataIndex: 'BRAND.TITLE',\n      editable: true,\n      key: 'BRAND',\n      align: 'center'\n    },\n    {\n      title: 'CREATED BY',\n      dataIndex: 'CREATED_BY',\n      editable: false,\n      key: 'CREATED_BY',\n      align: 'center'\n    },\n    {\n      title: 'CREATED DATE',\n      dataIndex: 'CREATED_DATE',\n      render: (_, record) => {\n        return (\n          <Tag color=\"blue\">\n            {moment(new Date(record.CREATED_DATE)).format('DD.MM.YYYY')}\n          </Tag>\n        )\n      },\n      key: 'CREATED_DATE',\n      align: 'center'\n    },\n    {\n      title: 'MODIFIED BY',\n      dataIndex: 'MODIFIED_BY',\n      editable: true,\n      key: 'MODIFIED_BY',\n      align: 'center'\n    },\n    {\n      title: 'MODIFIED DATE',\n      dataIndex: 'MODIFIED_DATE',\n      render: (_, record) => {\n        return (\n          <span>\n            {record.MODIFIED_DATE\n              ? moment(new Date(record.MODIFIED_DATE)).format('DD.MM.YYYY')\n              : ''}\n          </span>\n        )\n      },\n      key: 'MODIFIED_DATE',\n      align: 'center'\n    },\n    {\n      title: 'IS DELETED',\n      dataIndex: 'IS_DELETED',\n      editable: true,\n      render: (_, record) => {\n        return <Checkbox checked={record.IS_DELETED} />\n      },\n      key: 'IS_DELETED',\n      align: 'center'\n    },\n    {\n      title: 'ACTION',\n      dataIndex: 'operation',\n      key: 'ACTION',\n      render: (_, record) => {\n        const editable = isEditing(record)\n        return editable ? (\n          <div key={Math.random()}>\n            <Tooltip title=\"Save\">\n              <Button\n                onClick={() => save(record)}\n                style={{\n                  marginRight: 8\n                }}\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                icon={<SaveOutlined />}\n              />\n            </Tooltip>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <Tooltip title=\"Cancel\">\n                <Button\n                  key={Math.random()}\n                  type=\"primary\"\n                  shape=\"circle\"\n                  icon={<MinusCircleOutlined />}\n                />\n              </Tooltip>\n            </Popconfirm>\n          </div>\n        ) : (\n          <Space size=\"middle\">\n            <Tooltip title=\"Edit\">\n              <Button\n                key={Math.random()}\n                type=\"primary\"\n                shape=\"circle\"\n                icon={<SearchOutlined />}\n                disabled={editingKey !== ''}\n                onClick={() => edit(record)}\n              />\n            </Tooltip>\n            <Popconfirm\n              title=\"Sure to delete?\"\n              disabled={record.IS_DELETED}\n              onConfirm={() => deleteData(record)}\n            >\n              <Tooltip title=\"Delete\">\n                <Button\n                  key={Math.random()}\n                  type=\"primary\"\n                  shape=\"circle\"\n                  disabled={editingKey !== '' || record.IS_DELETED}\n                  icon={<DeleteOutlined />}\n                />\n              </Tooltip>\n            </Popconfirm>\n          </Space>\n        )\n      },\n      align: 'center'\n    }\n  ]\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType:\n          col.dataIndex === 'IS_DELETED'\n            ? 'checkbox'\n            : col.dataIndex === 'BRAND.TITLE'\n            ? 'select'\n            : 'input',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n        brandListData: brandListData\n      })\n    }\n  })\n  return (\n    <div>\n      <PageHeader\n        title=\"SNEAKER\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">List</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      >\n        <Row>\n          <Statistic title=\"TOTAL\" value={data.length} />\n        </Row>\n      </PageHeader>\n      <Row>\n        <Col span={24}>\n          <Card title=\"Sneaker List\" bordered={false}>\n            <Card.Grid style={gridStyle}>\n              <Form form={form} component={false}>\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell\n                    }\n                  }}\n                  rowKey=\"ID\"\n                  fixedHeader={false}\n                  tableLayout=\"fixed\"\n                  dataSource={data}\n                  loading={loading}\n                  columns={mergedColumns}\n                  rowClassName=\"editable-row\"\n                  pagination={{\n                    onChange: cancel\n                  }}\n                  size=\"small\"\n                />\n              </Form>\n            </Card.Grid>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default OrderList\n","import React, { useEffect } from 'react'\nimport { PageHeader, Tag, Row, Statistic, Button } from 'antd'\nimport SocketIO from 'socket.io-client'\nconst SOCKET_URL = 'http://localhost:3005'\n\nconst SocketTest = () => {\n  useEffect(() => {}, [])\n\n  const socketEmit = () => {\n    let socket = SocketIO(SOCKET_URL)\n    socket.emit('send message', {\n      user: 'fullName',\n      text: 'message.value'\n    })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title=\"SNEAKER\"\n        className=\"site-page-header\"\n        tags={<Tag color=\"blue\">List</Tag>}\n        avatar={{\n          src:\n            'https://instagram.fist7-2.fna.fbcdn.net/v/t51.2885-19/s150x150/84112379_337759313824930_4418112856008949760_n.jpg?_nc_ht=instagram.fist7-2.fna.fbcdn.net&_nc_ohc=Ea8vmIXefJAAX8V1w81&oh=b9655e8e250250178dccbb81f76ff011&oe=5EC40D8B'\n        }}\n      >\n        <Row>\n          <Statistic title=\"TOTAL\" />\n          <Button danger htmlType=\"button\" onClick={() => socketEmit()}>\n            Reset\n          </Button>\n        </Row>\n      </PageHeader>\n    </div>\n  )\n}\n\nexport default SocketTest\n","import React from 'react'\nimport { Layout } from 'antd'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport HeaderMenu from '../../components/header-menu'\nimport SiderMenu from '../../components/sider-menu'\n\nimport BrandAdd from '../brand/brand-add'\nimport BrandList from '../brand/brand-list'\n\nimport SneakerAdd from '../sneaker/sneaker-add'\nimport SneakerList from '../sneaker/sneaker-list'\n\nimport OrderAdd from '../order/order-add'\nimport OrderList from '../order/order-list'\n\nimport SocketTest from '../socket/socket-test'\n\nconst { Content } = Layout\n\nconst Home = () => (\n  <Router>\n    <Layout>\n      <HeaderMenu />\n      <Layout>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 960\n            }}\n          >\n            <Route exact path=\"/brand-add\" component={BrandAdd} />\n            <Route path=\"/brand-list\" component={BrandList} />\n            <Route path=\"/sneaker-add\" component={SneakerAdd} />\n            <Route path=\"/sneaker-list\" component={SneakerList} />\n            <Route path=\"/order-add\" component={OrderAdd} />\n            <Route path=\"/order-list\" component={OrderList} />\n            <Route path=\"/socket-test\" component={SocketTest} />\n          </Content>\n        </Layout>\n        <SiderMenu />\n      </Layout>\n    </Layout>\n  </Router>\n)\n\nexport default Home\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './views/home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}